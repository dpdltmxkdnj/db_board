<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis_db.board.repository.UserMapper">
    <select id="findById" resultType="User">
        select user_id, login_id, password,username, date_created
        from user
        where login_id=#{id}
    </select>
    <insert id="save">
        insert into user (login_id, password,username,date_created) values (#{loginId},#{password},#{username},#{dateCreated})
    </insert>

<!--    <select id="findAllUser">-->
<!--        select c.content_id as contentId,-->
<!--               c.title as title,-->
<!--               c.text as text,-->
<!--               c.date_created as dateCreated,-->
<!--               c.viewCount as viewCount,-->
<!--               c.likeCount as likeCount,-->
<!--               c.unlikeCount as unlikeCount,-->
<!--               u.login_id as loginId,-->
<!--               u.username as username-->
<!--        from content c,user u-->
<!--        where c.user_id=u.user_id;-->
<!--    </select>-->
    <select id="findAllUserText" resultMap="userText">
        select c.content_id as contentId,
               c.title as title,
               c.text as text,
               c.date_created as dateCreated,
               c.view_count as viewCount,
               c.like_count as likeCount,
               c.unlike_count as unlikeCount,
               u.login_id as loginId,
               u.username as username,
               u.user_id as userId
        from content c,user u
        where c.user_id=u.user_id;
    </select>

    <select id="findUserText" resultMap="userText">
        select c.content_id as contentId,
               c.title as title,
               c.text as text,
               c.date_created as dateCreated,
               c.view_count as viewCount,
               c.like_count as likeCount,
               c.unlike_count as unlikeCount,
               u.login_id as loginId,
               u.username as username,
                u.user_id as userId
        from content c,user u
        where c.user_id=u.user_id and c.content_id=#{id};
    </select>
    <select id="findAllUserTextByTitle" resultMap="userText">
        select c.content_id as contentId,
               c.title as title,
               c.text as text,
               c.date_created as dateCreated,
               c.view_count as viewCount,
               c.like_count as likeCount,
               c.unlike_count as unlikeCount,
               u.login_id as loginId,
               u.username as username,
               u.user_id as userId
        from content c,user u
        where c.user_id=u.user_id and c.title like concat('%',#{title},'%');
    </select>
    <select id="findAllUserTextByUsername" resultMap="userText">
        select c.content_id as contentId,
               c.title as title,
               c.text as text,
               c.date_created as dateCreated,
               c.view_count as viewCount,
               c.like_count as likeCount,
               c.unlike_count as unlikeCount,
               u.login_id as loginId,
               u.username as username,
               u.user_id as userId
        from content c,user u
        where c.user_id=u.user_id and u.username like concat('%',#{username},'%');
    </select>
    <select id="findAllUserTextByUsernameAndTitle" resultMap="userText">
        select c.content_id as contentId,
               c.title as title,
               c.text as text,
               c.date_created as dateCreated,
               c.view_count as viewCount,
               c.like_count as likeCount,
               c.unlike_count as unlikeCount,
               u.login_id as loginId,
               u.username as username,
               u.user_id as userId
        from content c,user u
        where c.user_id=u.user_id and (u.username like concat('%',#{usernameAndTitle},'%') or c.title like concat('%',#{usernameAndTitle},'%'));
    </select>
    <resultMap id="userText" type="User">
        <id property="userId" column="userId" />
        <result property="loginId" column="loginId"/>
        <result property="username" column="username"/>
        <collection property="texts" ofType="Text">
            <id property="contentId" column="contentId"/>
            <result property="title" column="title"/>
            <result property="text" column="text"/>
            <result property="dateCreated" column="dateCreated"/>
            <result property="viewCount" column="viewCount"/>
            <result property="likeCount" column="likeCount"/>
            <result property="unlikeCount" column="unlikeCount"/>
        </collection>
    </resultMap>

</mapper>

<!--<select id="selectBlog" resultMap="blogResult">-->
<!--select-->
<!--    B.id as blog_id,-->
<!--    B.title as blog_title,-->
<!--    B.author_id as blog_author_id,-->
<!--    P.id as post_id,-->
<!--    P.subject as post_subject,-->
<!--    P.body as post_body,-->
<!--from Blog B-->
<!--         left outer join Post P on B.id = P.blog_id-->
<!--where B.id = #{id}-->
<!--</select>-->

<!--<resultMap id="blogResult" type="Blog">-->
<!--<id property="id" column="blog_id" />-->
<!--<result property="title" column="blog_title"/>-->
<!--<collection property="posts" ofType="Post">-->
<!--    <id property="id" column="post_id"/>-->
<!--    <result property="subject" column="post_subject"/>-->
<!--    <result property="body" column="post_body"/>-->
<!--</collection>-->
<!--</resultMap>-->

